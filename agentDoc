#! /bin/sh


_file=$0
if [ -L $0 ]; then
    _file=$(readlink $0)
fi
sfx=$(basename $_file)
dir=$(cd $(dirname $_file); pwd)
_file=$0


function print_usage() {
    cat <<USAGE
Usage:
    search to edit  : $_file pattern
    create and edit : $_file + fname
    delete          : $_file - fname
    rename          : $_file fname1 fname2
    sync with git   : $_file =
    help            : $_file -h
USAGE
}

function list_docs() {
    sh -c "cd $dir && ls *.$sfx"
}

function sync_github() {
    cd "$dir"
    git pull
    shrink_imgs
    git commit -am ""
    git push
}

function check_reliance() {
    $1
}

function edit() {
    case $# in
        0) ;;
        1)
            # img2local
            sh -c "${EDITOR:-vim} ${1:%%:}"
            # img2github
            exit 0
            ;;
        *)
            echo "$@"
            exit 1
            ;;
    esac
}

function search_to_edit() {
    if [ -e "$dir/$1.$sfx" ]; then
        edit "$dir/$1.$sfx"
    else
        edit $(find $dir -d 1 -type f -iname "$1.$sfx")
        edit $(find $dir -d 1 -type f -iname "*$1*.$sfx")
        edit $(find $dir -d 1 -type f -iname "*.$sfx" -exec grep -HFi "$1" {} \;)
        echo "Not Found."
        exit 1
    fi
}

case $# in
    0) list_docs;;
    1)
        case $1 in
            -h) print_usage;;
            =) sync_github;;
            *) search_to_edit $1;;
        esac;;
    2)
        case $1 in 
            # create and edit
            +) edit "$dir/$2.$sfx";;
            # delete
            -) check_reliance "$2" && rm "$dir/$2.$sfx";;
            # rename
            *) check_reliance "$1" && mv "$dir/$1.$sfx" "$dir/$2.$sfx";;
        esac;;
    *) print_usage; exit 1;;
esac
